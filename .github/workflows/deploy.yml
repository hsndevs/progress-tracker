name: Deploy to GitHub Pages

on:
  push:
    branches: [ master ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Clear npm cache
        run: npm cache clean --force

      - name: Delete node_modules and package-lock.json
        run: |
          rm -rf node_modules package-lock.json

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Install schema-utils explicitly
        run: npm install schema-utils --save-dev --legacy-peer-deps

      - name: Verify webpack installation
        run: npx webpack --version

      - name: Build project
        run: npm run build
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}

      - name: Inject Firebase config into built files
        run: |
          # Create a script to inject environment variables
          cat > dist/firebase-env.js << 'EOF'
          window.FIREBASE_API_KEY = '${{ secrets.FIREBASE_API_KEY }}';
          window.FIREBASE_AUTH_DOMAIN = '${{ secrets.FIREBASE_AUTH_DOMAIN }}';
          window.FIREBASE_DATABASE_URL = '${{ secrets.FIREBASE_DATABASE_URL }}';
          window.FIREBASE_PROJECT_ID = '${{ secrets.FIREBASE_PROJECT_ID }}';
          window.FIREBASE_STORAGE_BUCKET = '${{ secrets.FIREBASE_STORAGE_BUCKET }}';
          window.FIREBASE_MESSAGING_SENDER_ID = '${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}';
          window.FIREBASE_APP_ID = '${{ secrets.FIREBASE_APP_ID }}';
          window.FIREBASE_MEASUREMENT_ID = '${{ secrets.FIREBASE_MEASUREMENT_ID }}';
          EOF

      - name: Create .nojekyll file
        run: touch dist/.nojekyll

      - name: List dist contents (debug)
        run: ls -la dist/

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
